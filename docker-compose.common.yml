version: '2.2'
services:

  # Database
  db:
    image: mariadb/server:10.4
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_db_${ENV}
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${MYSQL_CONF_DIR}:/etc/mysql/mariadb.conf.d
      - ${MYSQL_CONF_FILE}:/etc/mysql/mariadb.cnf
      - ${MYSQL_INIT_DIR}:/docker-entrypoint-initdb.d
      - ${LOG_DIR}/mysql:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    logging:
        driver: "json-file"
        options:
            max-size: "10m"

  # Redis
  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_redis_${ENV}
    expose:
      - "6379"
    volumes:
      - ${REDIS_CONF_DIR}/redis.conf:/usr/local/etc/redis/redis.conf
      - ${REDIS_DATA_DIR}:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    logging:
        driver: "json-file"
        options:
            max-size: "10m"

  # Nginx Proxy
  nginx-proxy:
    image: nginx:stable-alpine
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_nginxproxy_${ENV}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_DIR}:/var/www/applications/${APP_NAME}
      - ${NGINX_PROXY_CERTS_DIR}:/etc/nginx/certs:ro
      - ${NGINX_PROXY_VHOST_DIR}:/etc/nginx/vhost.d
      - ${NGINX_PROXY_EXTRA_CONF_DIR}:/etc/nginx/conf.d
      - ${NGINX_PROXY_CONF_DIR}/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_PROXY_CONF_DIR}/fastcgi.conf:/etc/nginx/fastcgi.conf
      - ${NGINX_PROXY_HTPASSWD_FILE}:/etc/nginx/.htpasswd
      - ${LOG_DIR}/nginx/proxy:/var/log/nginx
      - ${NGINX_DEFAULT_HTML_DIR}:/usr/share/nginx/html
      - ${STORAGE_DIR}:/var/www/applications/${APP_NAME}/storage
      - ${STORAGE_DIR}/app/public:/var/www/applications/${APP_NAME}/public/storage
    logging:
        driver: "json-file"
        options:
            max-size: "10m"

  # Docker-gen
  dockergen:
    image: jwilder/docker-gen
    command: -notify-sighup ${COMPOSE_PROJECT_NAME}_nginxproxy_${ENV} -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_dockergen_${ENV}
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${DOCKERGEN_CONF_DIR}/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
    logging:
        driver: "json-file"
        options:
            max-size: "10m"

  # Letsencrypt
  letsencrypt:
    restart: unless-stopped
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${COMPOSE_PROJECT_NAME}_letsencrypt_${ENV}
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - ${NGINX_PROXY_CERTS_DIR}:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=${COMPOSE_PROJECT_NAME}_dockergen_${ENV}
      - NGINX_PROXY_CONTAINER=${COMPOSE_PROJECT_NAME}_nginxproxy_${ENV}

  # Dockerhost for xdebug
  dockerhost:
    image: qoomon/docker-host
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_dockerhost_${ENV}
    cap_add:
      - "NET_ADMIN"
    logging:
        driver: "json-file"
        options:
            max-size: "10m"

# Docker Networks
networks:
  default:
    driver: bridge
